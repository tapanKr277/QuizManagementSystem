import { ActivatedRouteSnapshot, CanActivate, CanActivateFn, GuardResult, MaybeAsync, Router, RouterStateSnapshot } from '@angular/router';
import { AuthService } from '../service/auth/auth.service';

import { map, Observable } from 'rxjs';


export class adminGuard implements CanActivate {

  constructor(private router: Router, private authService: AuthService) {}
  canActivate(): Observable<boolean> | Promise<boolean> | boolean {
      return this.authService.isAdminLogin.pipe(
        map(isAdminLoggedin=>{
          if(isAdminLoggedin){
            return true;
          }else{
            this.authService.logout();
            this.router.navigate(['/login']);
            
            return false;
          }
        })
      )
    }

}



// import { Injectable } from '@angular/core';
// import { CanActivate, Router } from '@angular/router';
// import { AuthService } from '../service/auth/auth.service';
// import { map, Observable } from 'rxjs';

// @Injectable({
//   providedIn: 'root'
// })
// export class AuthGuard implements CanActivate {

//   constructor(private router: Router, private authService: AuthService) {}

//   canActivate(): Observable<boolean> | Promise<boolean> | boolean {
//     // Wait for the `isLoggedIn` status before allowing or denying access
//     return this.authService.isLoggedIn.pipe(
//       map(isLoggedIn => {
//         if (isLoggedIn) {
//           return true;
//         } else {
//           this.router.navigate(['/login']);
//           return false;
//         }
//       })
//     );
//   }
// }
